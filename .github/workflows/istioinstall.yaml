name: Install Istioctl

on:
  push:
    branches:
      - main

jobs:
  install-istioctl:
    runs-on: windows-latest

    steps:

      - name: Download istioctl
        shell: pwsh
        run: |
          $istio_version = "1.21.6"
          $os = if ($Env:RUNNER_OS -eq "Windows") {
              "win-amd64"
          } elseif ($Env:RUNNER_ARCH -eq "ARM64") {
              "linux-arm64"
          } else {
              "linux-amd64"
          }
          Write-Host "Detected OS: $os"
          if ($os -eq "linux-amd64"){
            # https://github.com/istio/istio/releases/download/1.21.6/istioctl-1.21.6-win-amd64.zip
            # https://github.com/istio/istio/releases/download/1.21.6/istio-1.21.6-linux-amd64.tar.gz
            $url = "https://github.com/istio/istio/releases/download/$istio_version/istioctl-$($istio_version)-linux-amd64.tar.gz"
            Invoke-WebRequest -Uri $url -OutFile "istio.tar.gz"
            
            echo $PWD
            
            mkdir test
            tar -xzf "istio.tar.gz" -C ./test
            chmod -R 755 ./test
            cd ./test
            #ls -la
            Get-ChildItem -Force | Format-List
            # Add istioctl directory to the PATH
            $env:PATH = "${$PWD}:$env:PATH"
            # Check if istioctl works by calling it directly
            echo $PWD
            ./istioctl version
          }
          # https://github.com/istio/istio/releases/download/1.21.6/istioctl-1.21.6-win-amd64.zip
            # https://github.com/istio/istio/releases/download/1.21.6/istio-1.21.6-linux-amd64.tar.gz
            $url = "https://github.com/istio/istio/releases/download/$istio_version/istioctl-$($istio_version)-win-amd64.zip"
            Invoke-WebRequest -Uri $url -OutFile "istio.zip"
            
            echo $PWD
            
            mkdir test
            tar -xzf "istio.zip" -C ./test
            chmod -R 755 ./test
            cd ./test
            #ls -la
            Get-ChildItem -Force | Format-List
            # Add istioctl directory to the PATH
            $env:PATH = "${$PWD}:$env:PATH"
            # Check if istioctl works by calling it directly
            echo $PWD
            istioctl.exe version

          
          

      - name: Add istioctl to PATH
        shell: bash
        run: |
          $os = if ($Env:RUNNER_OS -eq "Windows") {
              "win-amd64"
          } elseif ($Env:RUNNER_ARCH -eq "ARM64") {
              "linux-arm64"
          } else {
              "linux-amd64"
          }
          Write-Host "Detected OS: $os"
          if ($os -eq "linux-amd64"){
            echo "Adding istioctl to PATH"
            export PATH=$PWD/test:$PATH
            # Test istioctl again after PATH modification
            istioctl version
          }
          echo "Adding istioctl to PATH"
            export PATH=$PWD/test:$PATH
            # Test istioctl again after PATH modification
            istioctl version
          
      - name: Cache istioctl
        uses: actions/cache@v3
        with:
          path: ./test
          key: istio-1.21.6


  istioctl-version-check:
    runs-on: ubuntu-latest
    needs: install-istioctl

    steps:
      - name: Check inital 
        shell: bash
        run: |
          pwd
          ls -la
      - name: Restore istioctl from cache
        uses: actions/cache@v3
        with:
          path: ./test
          key: istio-1.21.6
      - name: cache restore
        shell: bash
        run: |
          pwd
          ls -la
          cd ./test
          ls -la
          ./istioctl version
          
      - name: Add istioctl to PATH
        shell: bash
        run: |
          chmod -R 755 ./test
          export PATH=$PWD/test:$PATH
          # Test istioctl again after PATH modification
          istioctl version

          echo "$PWD/test" >> $GITHUB_PATH

      - name: Test istioctl version
        run: |
          istioctl version
          
